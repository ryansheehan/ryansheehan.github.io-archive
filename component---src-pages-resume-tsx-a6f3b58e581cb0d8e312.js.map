{"version":3,"sources":["webpack:///./src/components/resume/ResumeHeader.tsx","webpack:///./src/components/resume/PersonalInfo.tsx","webpack:///./src/components/resume/SkillMeter.tsx","webpack:///./src/components/resume/SkillsList.tsx","webpack:///./src/components/resume/TimelineLayout.tsx","webpack:///./src/components/resume/ExperienceList.tsx","webpack:///./src/components/resume/EducationList.tsx","webpack:///./src/pages/resume.tsx"],"names":["useStyle","makeStyles","theme","root","padding","spacing","backgroundColor","palette","primary","dark","display","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","alignItems","download","gridArea","@media print","mainTitle","subtitle","ResumeHeader","_ref","name","title","_useStyle","react_default","a","createElement","className","Typography","variant","color","Fab","href","target","Icon","useStyles","iconLabel","minWidth","link","textDecorationLine","textDecoration","PersonalInfo","personalInfo","_useStyles","address","email","phone","website","social","city","state","zip","align","Divider","List","dense","disablePadding","ListItem","button","disableGutters","ListItemIcon","fontSize","ListItemText","substr","github","SvgIcon","d","linkedin","meter","whiteSpace","&>*","marginRight","&>*:last-child","grey","opacity","dot","SkillMeter","level","_ref$size","size","classNames","_useState","useState","dotClassNames","setDotClassNames","useEffect","names","i","on","off","map","key","style","skillList","gridRowGap","skillMeter","textAlign","skillGroup","marginTop","gridAutoRows","skillCategory","SkillList","categories","skills","Fragment","_ref2","category","component","_ref3","SkillMeter_SkillMeter","getSkillLevelName","noWrap","gridColumnGap","TimelineLayout","start","end","children","notesContainer","experienceBlock","ExperienceList","experience","company","notes","TimelineLayout_TimelineLayout","note","lineHeight","educationBlock","EducationList","education","school","degree","graduation","resume","minHeight","header","main","alignContent","side","light","&>*:nth-child(3)","breakInside","pageQuery","Resume","data","_data$resumeYaml","resumeYaml","summary","Container","Paper","ResumeHeader_ResumeHeader","ExperienceList_ExperienceList","EducationList_EducationList","PersonalInfo_PersonalInfo","SkillsList_SkillList"],"mappings":"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","file":"component---src-pages-resume-tsx-a6f3b58e581cb0d8e312.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Theme, Icon, Fab } from '@material-ui/core';\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  root: {\n    padding: `${theme.spacing(2)}px`,\n    backgroundColor: theme.palette.primary.dark,\n    display: 'grid',\n    gridTemplateColumns: '1fr auto',\n    gridTemplateRows: '1fr 1fr',\n    gridTemplateAreas: `\n      \"title icon\"\n      \"subtitle icon\"\n    `,\n    alignItems: 'center'\n  },\n  download: {\n    gridArea: 'icon',\n    '@media print': {\n      display: 'none'\n    }\n  },\n  mainTitle: {\n    gridArea: 'title'\n  },\n  subtitle: {\n    gridArea: 'subtitle',\n  }\n}))\n\nexport const ResumeHeader: React.FC<{name: string, title: string}> =\n({name, title}) => {\n  const {root, mainTitle, download, subtitle} = useStyle();\n\n  return (\n    <div className={root}>\n      <Typography className={mainTitle} variant=\"h2\" color=\"textSecondary\">{name}</Typography>\n      <Typography className={subtitle} variant=\"subtitle1\" color=\"textSecondary\">{title}</Typography>\n      <Fab className={download} href=\"resume.pdf\" target=\"_blank\">\n        <Icon>save_alt</Icon>\n      </Fab>\n    </div>\n  );\n}","import React from 'react';\nimport { IPersonalInfo } from '../../interfaces/resume/resume.interface';\nimport {\n  Typography,\n  Divider,\n  Icon,\n  SvgIcon,\n  List,\n  ListItemIcon,\n  ListItem,\n  ListItemText\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  iconLabel: {\n    minWidth: '36px'\n  },\n  link: {\n    textDecorationLine: 'underline'\n  },\n  '@media print': {\n    link: {\n      textDecoration: 'none'\n    }\n  }\n})\n\nexport const PersonalInfo: React.FC<{personalInfo: IPersonalInfo}> =\n({personalInfo}) => {\n\n  const {iconLabel, link} = useStyles();\n\n  const {address, email, phone, website, social} = personalInfo;\n  const {city, state, zip} = address;\n\n  return (\n    <div>\n      <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\">Personal Info</Typography>\n      <Divider />\n\n      <List dense disablePadding>\n        <ListItem button={true} disableGutters href={`https://www.google.com/maps/place/${city},+${state}+${zip}`}>\n          <ListItemIcon className={iconLabel}>\n            <Icon fontSize=\"small\">location_on</Icon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={`${city}, ${state}`} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={`tel:+1${phone}`}>\n          <ListItemIcon className={iconLabel}>\n            <Icon fontSize=\"small\">phone</Icon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={`${phone.substr(0,3)}.${phone.substr(3,3)}.${phone.substr(6)}`} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={`mailto:${email}`}>\n          <ListItemIcon className={iconLabel}>\n            <Icon fontSize=\"small\">email</Icon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={email} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={website}>\n          <ListItemIcon className={iconLabel}>\n            <Icon fontSize=\"small\">web</Icon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={website.substr(8)} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={social.github}>\n          <ListItemIcon className={iconLabel}>\n            <SvgIcon>\n              {/* Github icon */}\n              <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/>\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={social.github.substr(19)} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={social.linkedin}>\n          <ListItemIcon className={iconLabel}>\n            <SvgIcon>\n              {/* LinkedIn icon */}\n              <path d=\"M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z\"/>\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={social.linkedin.substr(28, 8)} />\n        </ListItem>\n      </List>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport {makeStyles} from '@material-ui/styles';\nimport {\n  Theme,\n  Icon,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  meter: {\n    whiteSpace: 'nowrap',\n    '&>*': {\n      marginRight: theme.spacing(0.7),\n    },\n    '&>*:last-child': {\n      marginRight: '0'\n    }\n  },\n  grey: {\n    opacity: 0.4\n  },\n  dot: {\n  }\n}));\n\nexport const SkillMeter: React.FC<{level: number, size?: number, classNames?: string}> = ({level, size=14, classNames}) => {\n  const {meter, dot, grey} = useStyles();\n  const [dotClassNames, setDotClassNames] = useState<string[]>([]);\n  useEffect(() => {\n    const names = [];\n    for(let i =0, on=dot, off=`${dot} ${grey}`; i < 5; i++) {\n      names[i] = i < level ? on : off;\n    }\n    setDotClassNames(names);\n  })\n\n  return (\n    <div className={`${meter} ${classNames}`}>\n      {dotClassNames.map((className, i) => <Icon key={i} style={{\n        fontSize: `${size}px`,\n      }} className={className}>lens</Icon>)}\n    </div>\n  );\n}","import React from 'react';\nimport {\n  Typography,\n  Divider,\n  makeStyles,\n  Theme\n} from '@material-ui/core';\nimport { ISkillCategory } from '../../interfaces/resume/resume.interface';\nimport { SkillMeter } from './SkillMeter';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    skillList: {\n      display: 'grid',\n      gridTemplateRows: 'auto',\n      gridTemplateColumns: 'auto auto',\n      gridRowGap: theme.spacing(0.5),\n    },\n    skillMeter: {\n      textAlign: 'right'\n    },\n    skillGroup: {\n      marginTop: theme.spacing(1),\n      display: 'grid',\n      gridTemplateColumns: '1fr',\n      gridAutoRows: 'auto',\n      gridRowGap: theme.spacing(0.5),\n    },\n    skillCategory: {\n\n    },\n    '@media print': {\n      skillCategory: {\n        // pageBreakInside: 'avoid'\n      },\n      skillGroup: {\n        // pageBreakInside: 'avoid'\n      }\n    }\n  }\n});\n\nexport const SkillList: React.FC<{skills: ISkillCategory[]}> = ({skills: categories}) => {\n\n  const {skillGroup, skillList, skillMeter, skillCategory} = useStyles();\n  const getSkillLevelName = (level: number) => {\n    let name = 'none';\n    switch(level) {\n      case 1: name = 'Interested'; break;\n      case 2: name = 'Learning'; break;\n      case 3: name = 'Intermediate'; break;\n      case 4: name = 'Advanced'; break;\n      case 5: name = 'Expert'; break;\n    }\n    return name;\n  }\n\n  return (<>{categories.map(({category, skills}) =>\n    <div key={category} className={skillCategory}>\n      <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\">{category}</Typography>\n      <Divider/>\n      <Typography component=\"div\" variant=\"body2\">\n        <div className={skillGroup}>\n        {\n          skills.map(({name, level}) =>\n            <div  key={name} className={skillList}>\n              <div>{name}</div>\n              <div>\n                <SkillMeter classNames={skillMeter} size={10} level={level}/>\n                <Typography component=\"div\" variant=\"caption\" align=\"right\">{getSkillLevelName(level)}</Typography>\n              </div>\n            </div>\n          )\n        }\n        </div>\n      </Typography>\n    </div>\n  )}</>);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  noWrap: {\n    whiteSpace: 'nowrap'\n  },\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '64px 1fr',\n    gridTemplateRows: '1fr',\n    gridColumnGap: theme.spacing(3),\n  }\n}));\n\nexport const TimelineLayout: React.FC<{start: string, end?: string}> = ({start, end, children}) => {\n  const {noWrap, root} = useStyles();\n\n  return (\n    <div className={root}>\n      <Typography component=\"div\" variant=\"body1\">\n          <div className={noWrap}>{start}{end ? ' -' : ''}</div>\n          {end ? <div>{end}</div> : ''}\n      </Typography>\n      <div>\n        {children}\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme, Typography, Divider, Icon } from '@material-ui/core';\nimport { ICompanyInfo } from '../../interfaces/resume/resume.interface';\nimport { TimelineLayout } from './TimelineLayout';\n\nconst useStyles = makeStyles((theme: Theme) =>({\n  root: {\n\n  },\n  notesContainer: {\n    marginTop: theme.spacing(1),\n    display: 'grid',\n    gridAutoRows: 'auto',\n    gridTemplateColumns: 'auto 1fr',\n  },\n  experienceBlock: {\n    marginTop: theme.spacing(3),\n  },\n  '@media print': {\n    experienceBlock: {\n      // pageBreakInside: 'avoid',\n      // '&>*>*:nth-child(2)': {\n      //   pageBreakInside: 'avoid'\n\n      // }\n    },\n    root: {\n      // pageBreakInside: 'avoid'\n    }\n  }\n}))\n\nexport const ExperienceList: React.FC<{experience: ICompanyInfo[]}> = ({experience}) => {\n  const {root, notesContainer, experienceBlock} = useStyles();\n\n  return (\n    <div className={root}>\n      <Typography variant=\"h5\" color=\"textPrimary\">Experience</Typography>\n      <Divider />\n      <div>\n        {experience.map(({start, end, company, title, notes}) =>\n        <div key={`${start}-${end}`} className={experienceBlock}>\n          <TimelineLayout start={start} end={end}>\n            <Typography variant=\"subtitle2\">{title}</Typography>\n            <Typography component=\"div\" variant=\"caption\">{company}</Typography>\n            <Typography component=\"div\" variant=\"body2\">\n              {\n                notes.map(note =>\n                <div className={notesContainer} key={note}>\n                  <Icon style={{fontSize:'.75rem', lineHeight:'1.43'}}>arrow_right</Icon>\n                  <div>{note}</div>\n                </div>)\n              }\n            </Typography>\n          </TimelineLayout>\n        </div>\n        )}\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme, Typography, Divider } from '@material-ui/core';\nimport { ISchool } from '../../interfaces/resume/resume.interface';\nimport { TimelineLayout } from './TimelineLayout';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n\n  },\n  educationBlock: {\n    marginTop: theme.spacing(3)\n  }\n}))\n\nexport const EducationList: React.FC<{education: ISchool[]}> = ({education}) => {\n  const {root, educationBlock} = useStyles();\n\n  return (\n    <div className={root}>\n      <Typography variant=\"h5\" color=\"textPrimary\">Education</Typography>\n      <Divider />\n      <div>\n        {\n          education.map(({school, degree, graduation}) =>\n          <div className={educationBlock} key={school}>\n            <TimelineLayout start={graduation}>\n              <Typography variant=\"subtitle2\">{degree}</Typography>\n              <Typography component=\"div\" variant=\"caption\">{school}</Typography>\n            </TimelineLayout>\n          </div>)\n        }\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Paper,\n  Theme,\n  Container,\n  Typography,\n} from '@material-ui/core';\nimport { ResumeHeader } from '../components/resume/ResumeHeader';\nimport { IResume } from '../interfaces/resume/resume.interface';\nimport { PersonalInfo } from '../components/resume/PersonalInfo';\nimport { SkillList } from '../components/resume/SkillsList';\nimport { ExperienceList } from '../components/resume/ExperienceList';\nimport { EducationList } from '../components/resume/EducationList';\n\nimport './resume.scss'\n\ninterface ResumeProps {\n  data: {\n    resumeYaml: IResume;\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    root: {\n\n    },\n    resume: {\n      minHeight: '800px',\n      display: 'grid',\n      gridTemplateColumns: '1fr auto',\n      gridTemplateRows: 'auto 1fr',\n      gridTemplateAreas: `\n        \"header header\"\n        \"main side\"\n      `,\n    },\n    header: {\n      gridArea: 'header'\n    },\n    main: {\n      gridArea: 'main',\n      display: 'grid',\n      gridTemplateColumns: '1fr',\n      gridTemplateRows: 'auto auto 1fr',\n      gridRowGap: theme.spacing(1),\n      padding: theme.spacing(2),\n      alignContent: 'flex-start',\n    },\n    side: {\n      padding: theme.spacing(2),\n      backgroundColor: theme.palette.primary.light,\n      gridArea: 'side',\n      display: 'grid',\n      gridTemplateColumns: 'auto',\n      gridAutoRows: 'auto',\n      gridRowGap: theme.spacing(1),\n      alignContent: 'flex-start'\n    },\n    '@media print': {\n      resume: {\n        // height: '100%'\n      },\n      main: {\n        '&>*:nth-child(3)': {\n          breakInside: 'avoid'\n        }\n      }\n    },\n  }\n});\n\nconst Resume: React.FC<ResumeProps> = ({data}) => {\n  const {root, resume, header, main, side} = useStyles();\n\n  const {\n    name,\n    title,\n    personalInfo,\n    summary,\n    education,\n    experience,\n    skills\n  } = data.resumeYaml;\n\n\n  return (\n    <Container className={root}>\n      <Paper className={resume}>\n        <div className={header}>\n          <ResumeHeader name={name} title={title} />\n        </div>\n        <div className={main}>\n          <Typography variant=\"body2\">{summary}</Typography>\n          <ExperienceList experience={experience} />\n          <EducationList education={education} />\n        </div>\n        <div className={side}>\n          <PersonalInfo personalInfo={personalInfo} />\n          <SkillList skills={skills} />\n        </div>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default Resume;\n\n\nexport const pageQuery = graphql`\n{\n  resumeYaml {\n    name\n    title\n    personalInfo {\n      address { city state zip }\n      email\n      phone\n      website\n      social { github linkedin }\n    }\n    summary\n    education {\n      school\n      degree\n      graduation\n    }\n    experience {\n      company\n      title\n      start\n      end\n      notes\n    }\n    skills {\n      category\n      skills { name level }\n    }\n  }\n}\n\n`;"],"sourceRoot":""}