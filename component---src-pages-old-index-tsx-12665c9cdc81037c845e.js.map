{"version":3,"sources":["webpack:///./src/pages/old/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/layout.tsx","webpack:///./src/components/seo/seo.tsx","webpack:///./src/components/bio/bio.tsx"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","_components_bio_bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","_ref$description","_ref$lang","lang","_ref$meta","meta","_ref$keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","bioQuery","Bio","_data$site$siteMetada","social","display","github","_public_static_d_2452627939_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-old-index-tsx-12665c9cdc81037c845e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../../components/bio/bio\"\nimport Layout from \"../../components/layout/layout\"\nimport SEO from \"../../components/seo/seo\"\nimport { rhythm } from \"../../utils/typography\"\nimport { PageProps } from '../../interfaces/page-props.interface';\nimport { IAllMarkdownRemark } from '../../interfaces/markdownRemark.interface';\n\ntype BlogIndexProps = {\n  data: {\n    allMarkdownRemark: IAllMarkdownRemark;\n  }\n} & PageProps;\n\nclass BlogIndex extends React.Component<BlogIndexProps> {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: {\n          draft: { eq: false }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../../utils/typography\"\n\nexport interface LayoutProps {\n  location: Location;\n  title: string;\n}\n\nclass Layout extends React.Component<LayoutProps> {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { IPageQuery } from '../../interfaces/page-query.interface';\n\nexport type Meta = {name: string; content: string;} | {property: string; content: string;}\n\nexport interface SEOProps {\n  description?: string;\n  lang?: string;\n  meta?: Meta[];\n  keywords?: string[];\n  title: string;\n}\n\nconst SEO: React.FunctionComponent<SEOProps> = ({ description='', lang='en', meta=[], keywords=[], title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  ) as IPageQuery;\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\n// SEO.propTypes = {\n//   description: PropTypes.string,\n//   lang: PropTypes.string,\n//   meta: PropTypes.arrayOf(PropTypes.object),\n//   keywords: PropTypes.arrayOf(PropTypes.string),\n//   title: PropTypes.string.isRequired,\n// }\n\nexport default SEO\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n// import Image from \"gatsby-image\"\n\nimport { rhythm } from \"../../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            {/* <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            /> */}\n            <p>\n              Written by <strong>{author}</strong> who lives and works in DFW building useful things.\n              {` `}\n              <a href={`https://github.com/${social.github}`}>\n                You should follow him on Github\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}