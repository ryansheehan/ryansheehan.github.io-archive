{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./node_modules/classnames/bind.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","classnames_bind__WEBPACK_IMPORTED_MODULE_1__","classnames_bind__WEBPACK_IMPORTED_MODULE_1___default","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","cx","classNames","bind","styles","MainPage","_ref","_data$site$siteMetada","data","site","siteMetadata","title","email","a","createElement","className","href","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","this","Array","isArray","apply","key","call","join","module","exports","default","undefined"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAKME,EAAKC,IAAWC,KAAKC,KAcZC,UAZgC,SAAAC,GAAY,IAAAC,EAAAD,EAAVE,KACjBC,KAAKC,aAA3BC,EADiDJ,EACjDI,MAAOC,EAD0CL,EAC1CK,MAEf,OACEjB,EAAAkB,EAAAC,cAAA,OAAKC,UAAWd,EAAG,sBACjBN,EAAAkB,EAAAC,cAAA,UAAKH,GACLhB,EAAAkB,EAAAC,cAAA,2BACAnB,EAAAkB,EAAAC,cAAA,sBAAanB,EAAAkB,EAAAC,cAAA,KAAGE,KAAI,UAAYJ,GAAUA,MAOzC,IAAMnB,EAAS,kCCrBtB,IAAAwB,GAOA,WACA,aAEA,IAAAC,EAAA,GAAgBC,eAEhB,SAAAjB,IAGA,IAFA,IAAAkB,EAAA,GAEAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAAF,UAAAD,GACA,GAAAG,EAAA,CAEA,IAAAC,SAAAD,EAEA,cAAAC,GAAA,WAAAA,EACAL,EAAAM,KAAAC,WAAAH,YACI,GAAAI,MAAAC,QAAAL,GACJJ,EAAAM,KAAAxB,EAAA4B,MAAAH,KAAAH,SACI,cAAAC,EACJ,QAAAM,KAAAP,EACAN,EAAAc,KAAAR,EAAAO,IAAAP,EAAAO,IACAX,EAAAM,KAAAC,WAAAI,QAMA,OAAAX,EAAAa,KAAA,KAGkCC,EAAAC,SAClCjC,EAAAkC,QAAAlC,EACAgC,EAAAC,QAAAjC,QAKGmC,KAFsBpB,EAAA,WACzB,OAAAf,GACG4B,MAAAK,EAFoB,OAEpBD,EAAAC,QAAAlB,GArCH","file":"component---src-pages-index-tsx-413dcb3113fdc6160fa6.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport classNames from 'classnames/bind';\nimport styles from './index.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst MainPage: React.FunctionComponent<any> = ({data}) => {\n  const { title, email } = data.site.siteMetadata;\n\n  return (\n    <div className={cx('mainPageContainer')}>\n      <h1>{title}</h1>\n      <div>Coming soon!</div>\n      <div>Contact <a href={`mailto:${email}`}>{email}</a></div>\n    </div>\n  );\n};\n\nexport default MainPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        email\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: {\n          draft: { eq: false }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(this && this[arg] || arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(this, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(this && this[key] || key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}