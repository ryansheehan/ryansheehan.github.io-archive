{"version":3,"sources":["webpack:///./src/components/resume/ResumeHeader.tsx","webpack:///./src/components/resume/PersonalInfo.tsx","webpack:///./src/components/resume/SkillMeter.tsx","webpack:///./src/components/resume/SkillsList.tsx","webpack:///./src/components/resume/TimelineLayout.tsx","webpack:///./src/components/resume/ExperienceList.tsx","webpack:///./src/components/resume/EducationList.tsx","webpack:///./src/pages/resume.tsx"],"names":["useStyle","makeStyles","theme","root","padding","spacing","backgroundColor","palette","primary","dark","ResumeHeader","_ref","name","title","react_default","a","createElement","className","Typography","variant","color","useStyles","iconLabel","minWidth","link","textDecorationLine","@media print","textDecoration","PersonalInfo","personalInfo","_useStyles","address","email","phone","website","social","city","state","zip","align","Divider","List","dense","disablePadding","ListItem","button","disableGutters","href","ListItemIcon","Icon","fontSize","ListItemText","substr","github","SvgIcon","d","linkedin","meter","whiteSpace","&>*","marginRight","&>*:last-child","grey","opacity","dot","SkillMeter","level","_ref$size","size","classNames","_useState","useState","dotClassNames","setDotClassNames","useEffect","names","i","on","off","map","key","style","skillList","display","gridTemplateRows","gridTemplateColumns","gridRowGap","skillMeter","textAlign","skillGroup","marginTop","gridAutoRows","skillCategory","pageBreakInside","SkillList","categories","skills","Fragment","_ref2","category","component","_ref3","SkillMeter_SkillMeter","getSkillLevelName","noWrap","gridColumnGap","TimelineLayout","start","end","children","notesContainer","experienceBlock","ExperienceList","experience","company","notes","TimelineLayout_TimelineLayout","note","lineHeight","educationBlock","EducationList","education","school","degree","graduation","resume","minHeight","gridTemplateAreas","header","gridArea","main","side","light","alignContent","pageQuery","Resume","data","_data$resumeYaml","resumeYaml","summary","Container","Paper","ResumeHeader_ResumeHeader","ExperienceList_ExperienceList","EducationList_EducationList","PersonalInfo_PersonalInfo","SkillsList_SkillList"],"mappings":"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","file":"component---src-pages-resume-tsx-bc286f73d0a4f620e828.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Theme } from '@material-ui/core';\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  root: {\n    padding: `${theme.spacing(2)}px`,\n    backgroundColor: theme.palette.primary.dark\n  }\n}))\n\nexport const ResumeHeader: React.FC<{name: string, title: string}> =\n({name, title}) => {\n  const {root} = useStyle();\n\n  return (\n    <div className={root}>\n      <Typography variant=\"h2\" color=\"textSecondary\">{name}</Typography>\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">{title}</Typography>\n    </div>\n  );\n}","import React from 'react';\nimport { IPersonalInfo } from '../../interfaces/resume/resume.interface';\nimport {\n  Typography,\n  Divider,\n  Icon,\n  SvgIcon,\n  List,\n  ListItemIcon,\n  ListItem,\n  ListItemText\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  iconLabel: {\n    minWidth: '36px'\n  },\n  link: {\n    textDecorationLine: 'underline'\n  },\n  '@media print': {\n    link: {\n      textDecoration: 'none'\n    }\n  }\n})\n\nexport const PersonalInfo: React.FC<{personalInfo: IPersonalInfo}> =\n({personalInfo}) => {\n\n  const {iconLabel, link} = useStyles();\n\n  const {address, email, phone, website, social} = personalInfo;\n  const {city, state, zip} = address;\n\n  return (\n    <div>\n      <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\">Personal Info</Typography>\n      <Divider />\n\n      <List dense disablePadding>\n        <ListItem button={true} disableGutters href={`https://www.google.com/maps/place/${city},+${state}+${zip}`}>\n          <ListItemIcon className={iconLabel}>\n            <Icon fontSize=\"small\">location_on</Icon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={`${city}, ${state}`} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={`tel:+1${phone}`}>\n          <ListItemIcon className={iconLabel}>\n            <Icon fontSize=\"small\">phone</Icon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={`${phone.substr(0,3)}.${phone.substr(3,3)}.${phone.substr(6)}`} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={`mailto:${email}`}>\n          <ListItemIcon className={iconLabel}>\n            <Icon fontSize=\"small\">email</Icon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={email} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={website}>\n          <ListItemIcon className={iconLabel}>\n            <Icon fontSize=\"small\">web</Icon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={website.substr(8)} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={social.github}>\n          <ListItemIcon className={iconLabel}>\n            <SvgIcon>\n              {/* Github icon */}\n              <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/>\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={social.github.substr(19)} />\n        </ListItem>\n        <ListItem button={true} disableGutters href={social.linkedin}>\n          <ListItemIcon className={iconLabel}>\n            <SvgIcon>\n              {/* LinkedIn icon */}\n              <path d=\"M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z\"/>\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText className={link} primary={social.linkedin.substr(28, 8)} />\n        </ListItem>\n      </List>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport {makeStyles} from '@material-ui/styles';\nimport {\n  Theme,\n  Icon,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  meter: {\n    whiteSpace: 'nowrap',\n    '&>*': {\n      marginRight: theme.spacing(0.7),\n    },\n    '&>*:last-child': {\n      marginRight: '0'\n    }\n  },\n  grey: {\n    opacity: 0.4\n  },\n  dot: {\n  }\n}));\n\nexport const SkillMeter: React.FC<{level: number, size?: number, classNames?: string}> = ({level, size=14, classNames}) => {\n  const {meter, dot, grey} = useStyles();\n  const [dotClassNames, setDotClassNames] = useState<string[]>([]);\n  useEffect(() => {\n    const names = [];\n    for(let i =0, on=dot, off=`${dot} ${grey}`; i < 5; i++) {\n      names[i] = i < level ? on : off;\n    }\n    setDotClassNames(names);\n  })\n\n  return (\n    <div className={`${meter} ${classNames}`}>\n      {dotClassNames.map((className, i) => <Icon key={i} style={{\n        fontSize: `${size}px`,\n      }} className={className}>lens</Icon>)}\n    </div>\n  );\n}","import React from 'react';\nimport {\n  Typography,\n  Divider,\n  makeStyles,\n  Theme\n} from '@material-ui/core';\nimport { ISkillCategory } from '../../interfaces/resume/resume.interface';\nimport { SkillMeter } from './SkillMeter';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    skillList: {\n      display: 'grid',\n      gridTemplateRows: 'auto',\n      gridTemplateColumns: 'auto auto',\n      gridRowGap: theme.spacing(0.5),\n    },\n    skillMeter: {\n      textAlign: 'right'\n    },\n    skillGroup: {\n      marginTop: theme.spacing(1),\n      display: 'grid',\n      gridTemplateColumns: '1fr',\n      gridAutoRows: 'auto',\n      gridRowGap: theme.spacing(0.5),\n    },\n    skillCategory: {\n\n    },\n    '@media print': {\n      skillCategory: {\n        pageBreakInside: 'avoid'\n      },\n      skillGroup: {\n        pageBreakInside: 'avoid'\n      }\n    }\n  }\n});\n\nexport const SkillList: React.FC<{skills: ISkillCategory[]}> = ({skills: categories}) => {\n\n  const {skillGroup, skillList, skillMeter, skillCategory} = useStyles();\n  const getSkillLevelName = (level: number) => {\n    let name = 'none';\n    switch(level) {\n      case 1: name = 'Interested'; break;\n      case 2: name = 'Learning'; break;\n      case 3: name = 'Intermediate'; break;\n      case 4: name = 'Advanced'; break;\n      case 5: name = 'Expert'; break;\n    }\n    return name;\n  }\n\n  return (<>{categories.map(({category, skills}) =>\n    <div key={category} className={skillCategory}>\n      <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\">{category}</Typography>\n      <Divider/>\n      <Typography component=\"div\" variant=\"body2\">\n        <div className={skillGroup}>\n        {\n          skills.map(({name, level}) =>\n            <div  key={name} className={skillList}>\n              <div>{name}</div>\n              <div>\n                <SkillMeter classNames={skillMeter} size={10} level={level}/>\n                <Typography component=\"div\" variant=\"caption\" align=\"right\">{getSkillLevelName(level)}</Typography>\n              </div>\n            </div>\n          )\n        }\n        </div>\n      </Typography>\n    </div>\n  )}</>);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  noWrap: {\n    whiteSpace: 'nowrap'\n  },\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '64px 1fr',\n    gridTemplateRows: '1fr',\n    gridColumnGap: theme.spacing(3),\n  }\n}));\n\nexport const TimelineLayout: React.FC<{start: string, end?: string}> = ({start, end, children}) => {\n  const {noWrap, root} = useStyles();\n\n  return (\n    <div className={root}>\n      <Typography component=\"div\" variant=\"body1\">\n          <div className={noWrap}>{start}{end ? ' -' : ''}</div>\n          {end ? <div>{end}</div> : ''}\n      </Typography>\n      <div>\n        {children}\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme, Typography, Divider, Icon } from '@material-ui/core';\nimport { ICompanyInfo } from '../../interfaces/resume/resume.interface';\nimport { TimelineLayout } from './TimelineLayout';\n\nconst useStyles = makeStyles((theme: Theme) =>({\n  root: {\n\n  },\n  notesContainer: {\n    marginTop: theme.spacing(1),\n    display: 'grid',\n    gridAutoRows: 'auto',\n    gridTemplateColumns: 'auto 1fr',\n  },\n  experienceBlock: {\n    marginTop: theme.spacing(3),\n  },\n  '@media print': {\n    experienceBlock: {\n      pageBreakInside: 'avoid'\n    }\n  }\n}))\n\nexport const ExperienceList: React.FC<{experience: ICompanyInfo[]}> = ({experience}) => {\n  const {root, notesContainer, experienceBlock} = useStyles();\n\n  return (\n    <div className={root}>\n      <Typography variant=\"h5\" color=\"textPrimary\">Experience</Typography>\n      <Divider />\n      <div>\n        {experience.map(({start, end, company, title, notes}) =>\n        <div key={`${start}-${end}`} className={experienceBlock}>\n          <TimelineLayout start={start} end={end}>\n            <Typography variant=\"subtitle2\">{title}</Typography>\n            <Typography component=\"div\" variant=\"caption\">{company}</Typography>\n            <Typography component=\"div\" variant=\"body2\">\n              {\n                notes.map(note =>\n                <div className={notesContainer} key={note}>\n                  <Icon style={{fontSize:'.75rem', lineHeight:'1.43'}}>arrow_right</Icon>\n                  <div>{note}</div>\n                </div>)\n              }\n            </Typography>\n          </TimelineLayout>\n        </div>\n        )}\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Theme, Typography, Divider } from '@material-ui/core';\nimport { ISchool } from '../../interfaces/resume/resume.interface';\nimport { TimelineLayout } from './TimelineLayout';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n\n  },\n  educationBlock: {\n    marginTop: theme.spacing(3)\n  }\n}))\n\nexport const EducationList: React.FC<{education: ISchool[]}> = ({education}) => {\n  const {root, educationBlock} = useStyles();\n\n  return (\n    <div className={root}>\n      <Typography variant=\"h5\" color=\"textPrimary\">Education</Typography>\n      <Divider />\n      <div>\n        {\n          education.map(({school, degree, graduation}) =>\n          <div className={educationBlock} key={school}>\n            <TimelineLayout start={graduation}>\n              <Typography variant=\"subtitle2\">{degree}</Typography>\n              <Typography component=\"div\" variant=\"caption\">{school}</Typography>\n            </TimelineLayout>\n          </div>)\n        }\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Paper,\n  Theme,\n  Container,\n  Typography,\n} from '@material-ui/core';\nimport { ResumeHeader } from '../components/resume/ResumeHeader';\nimport { IResume } from '../interfaces/resume/resume.interface';\nimport { PersonalInfo } from '../components/resume/PersonalInfo';\nimport { SkillList } from '../components/resume/SkillsList';\nimport { ExperienceList } from '../components/resume/ExperienceList';\nimport { EducationList } from '../components/resume/EducationList';\n\nimport './resume.scss'\n\ninterface ResumeProps {\n  data: {\n    resumeYaml: IResume;\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    root: {\n\n    },\n    resume: {\n      minHeight: '800px',\n      display: 'grid',\n      gridTemplateColumns: '1fr auto',\n      gridTemplateRows: 'auto 1fr',\n      gridTemplateAreas: `\n        \"header header\"\n        \"main side\"\n      `,\n    },\n    header: {\n      gridArea: 'header'\n    },\n    main: {\n      gridArea: 'main',\n      display: 'grid',\n      gridTemplateColumns: '1fr',\n      gridTemplateRows: 'auto auto auto',\n      gridRowGap: theme.spacing(1),\n      padding: theme.spacing(2),\n    },\n    side: {\n      padding: theme.spacing(2),\n      backgroundColor: theme.palette.primary.light,\n      gridArea: 'side',\n      display: 'grid',\n      gridTemplateColumns: 'auto',\n      gridAutoRows: 'auto',\n      gridRowGap: theme.spacing(1),\n      alignContent: 'flex-start'\n    },\n    '@media print': {\n      resume: {\n        // height: '100%'\n      },\n      main: {\n        alignContent: 'flex-start',\n      },\n    },\n  }\n});\n\nconst Resume: React.FC<ResumeProps> = ({data}) => {\n  const {root, resume, header, main, side} = useStyles();\n\n  const {\n    name,\n    title,\n    personalInfo,\n    summary,\n    education,\n    experience,\n    skills\n  } = data.resumeYaml;\n\n\n  return (\n    <Container className={root}>\n      <Paper className={resume}>\n        <div className={header}>\n          <ResumeHeader name={name} title={title} />\n        </div>\n        <div className={main}>\n          <Typography variant=\"body2\">{summary}</Typography>\n          <ExperienceList experience={experience} />\n          <EducationList education={education} />\n        </div>\n        <div className={side}>\n          <PersonalInfo personalInfo={personalInfo} />\n          <SkillList skills={skills} />\n        </div>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default Resume;\n\n\nexport const pageQuery = graphql`\n{\n  resumeYaml {\n    name\n    title\n    personalInfo {\n      address { city state zip }\n      email\n      phone\n      website\n      social { github linkedin }\n    }\n    summary\n    education {\n      school\n      degree\n      graduation\n    }\n    experience {\n      company\n      title\n      start\n      end\n      notes\n    }\n    skills {\n      category\n      skills { name level }\n    }\n  }\n}\n\n`;"],"sourceRoot":""}